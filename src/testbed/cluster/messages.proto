//
// Protocol messages for testbed cluster operation
//

package UniSphere.TestBed.Protocol;

import "src/interplex/contact.proto";

message ClusterJoinRequest {
  // IP address available for simulation
  required string simulation_ip = 1;
  // Start of port range available for simulation
  required uint32 simulation_port_start = 2;
  // End of port range available for simulation
  required uint32 simulation_port_end = 3;
};

message ClusterJoinResponse {
  // Must be true for successful registration
  required bool registered = 1;
};

message ClusterHeartbeat {
  // An empty heartbeat message
};

message StartRequest {
  // Request the master to enter simulation phase
};

message StartResponse {
  message Slave {
    // Cluster contact information
    required UniSphere.Protocol.Contact contact = 1;
    // IP address available for simulation
    required string ip = 2;
    // Start of port range available for simulation
    required uint32 port_start = 3;
    // End of port range available for simulation
    required uint32 port_end = 4;
  };

  // A list of registered slaves
  repeated Slave slaves = 1;
};

message AssignPartitionRequest {
  message Node {
    // Node name
    required string name = 1;
    // Node contact
    required UniSphere.Protocol.Contact contact = 2;
    // Node peers
    repeated UniSphere.Protocol.Contact peers = 3;
  };

  // A list of nodes in this partition
  repeated Node nodes = 1;
  // Number of global nodes
  required uint32 num_global_nodes = 2;
  // Seed value
  required uint32 seed = 3;
};

message AssignPartitionResponse {
};

message AbortRequest {
};

message AbortResponse {
};

message RunTestRequest {
  message Node {
    // Node identifier
    required bytes id = 1;
    // JSON argument representation
    required string arguments = 2;
  }

  // Test case name
  required string name = 1;
  // Test case run identifier
  required uint32 id = 2;
  // A list of nodes where the test should be run
  repeated Node nodes = 3;
};

message RunTestResponse {
};

